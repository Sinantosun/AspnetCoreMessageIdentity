@{
    Layout = null;

}

<!DOCTYPE html>
<html lang="tr">

@await Html.PartialAsync("~/Views/DefaultLayout/DefaultHeaderPartial.cshtml")

<body class="">

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/Template/inspinia-gh-pages/js/jquery-3.1.1.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script type="text/javascript">

        $(function () {

            var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:7071/SignalRHub").build();
            var user = "";
            connection.start().then(() => {
               
                $.ajax({
                    url: "/Mailbox/GetUser",
                    type:'get',
                    success: function (data) {
                        console.log(data);
                        connection.invoke("GetNickName", data.nameSurname);
                        connection.invoke("GetActiveClientCount");
                        connection.invoke("GetConnId", data.userName);
                        user = data.nameSurname;
                       
                    }
                });
                $(".testbtn").click(function () {

                    alert("nice you are clicked");
                    var email = $("#Email").val();

                    connection.invoke("SendMessageAsync", email,user);

                });


             

            }).catch((err) => { console.log(err); });

            connection.on("clientJoined", data => {
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3500,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "info",
                    title: data + " sisteme giriş yaptı",
                });

            });

            connection.on("reciveMessage", data => {
                Toast.fire({
                    icon: "info",
                    title: data,
                });
            });

            connection.on("ReciveActiveClientCount", data => {
                $("#ActiveClientCount").text(data);
            });
        });

    </script>



    <div id="wrapper">


        @await Component.InvokeAsync("_DefaultSideBarPartialComponentPartial")
        <div id="page-wrapper" class="gray-bg">

            @await Component.InvokeAsync("_NavbarComponentPartial")


            <div class="wrapper wrapper-content">
                @RenderBody()
            </div>
            <div class="footer">
                <div>
                    <strong>Copyright</strong> Tüm Hakları Saklıdır &copy; @DateTime.Now.Year
                </div>
            </div>

        </div>
    </div>

    @await Html.PartialAsync("~/Views/DefaultLayout/DefaultScriptsPartial.cshtml")

    @await Html.PartialAsync("~/Views/DefaultLayout/NotificationPartial.cshtml")


</body>

</html>